#
# Hack Nerd Font characters
#  
#
format = """
(bg:#5e81ac fg:#e4eff5)\
$os\
$username\
[](bg:#88c0d0 fg:#5e81ac)\
$directory\
${custom.directory_separator_not_git}\
${custom.directory_separator_git}\
${custom.directory_separator_git_changes}\
(\
${custom.git_branch_committed}\
${custom.git_branch_dirty}\
$git_status\
${custom.git_separator_committed}\
${custom.git_separator_dirty}\
)\
$fill\
$c\
$elixir\
$elm\
$golang\
$gradle\
$haskell\
$java\
$julia\
$nodejs\
$nim\
$rust\
$scala\
$docker_context\
$time\
$line_break\
$character"""

[custom.directory_separator_git]
command = ""
format = "[](fg:#88c0d0 bg:#054e98)"
# Only when inside git repository
when = 'test "$(git_status)" = "committed"'

[custom.directory_separator_git_changes]
command = ""
format = "[](fg:#88c0d0 bg:#DA627D)"
# Only when inside git repository
when = 'test "$(git_status)" = "dirty"'


[custom.git_separator_committed]
command = ""
format = "[](fg:#054e98)"
# Only when inside git repository
when = 'test "$(git_status)" = "committed"'

[custom.git_separator_dirty]
command = ""
format = "[](fg:#DA627D)"
# Only when inside git repository
when = 'test "$(git_status)" = "dirty"'

# Output a styled separatoright after the directory when NOT inside a git repository.
[custom.directory_separator_not_git]
description = "Output a styled separator right after the directory when NOT inside a git repository."
command = ""
format = "[](fg:#88c0d0)"
# Only when NOT inside a git repository
when = 'test "$(git_status)" = "none"'

[git_status]
style = "bg:#DA627D"
format = '([$all_status$ahead_behind ]($style))'

# Fill character (empty space) between the left and right prompt
[fill]
symbol = ' '

# Disable the blank line at the start of the prompt
# add_newline = false

# You can also replace your username with a neat symbol like   or disable this
# and use the os module below
[username]
show_always = true
style_user = "fg:#e4eff5 bg:#5e81ac"
style_root = "fg:#e4eff5 bg:#5e81ac"
format = '[$user ]($style)'
disabled = false

# An alternative to the username module which displays a symbol that
# represents the current operating system
[os]
style = "fg:#e4eff5 bg:#5e81ac"
disabled = true # Disabled by default

[directory]
style = "bg:#88c0d0 fg:#222222"
format = "[ $path ]($style)"
truncation_length = 4 
truncation_symbol = "…/"

# Here is how you can shorten some long paths by text replacement
# similar to mapped_locations in Oh My Posh:
[directory.substitutions]
"Documents" = "󰈙 "
"Downloads" = " "
"Music" = " "
"Pictures" = " "
# Keep in mind that the order matters. For example:
# "Important Documents" = " 󰈙 "
# will not be replaced, because "Documents" was already substituted before.
# So either put "Important Documents" before "Documents" or use the substituted version:
# "Important 󰈙 " = " 󰈙 "

[custom.git_branch_committed]
command = "git rev-parse --abbrev-ref HEAD"
symbol = ""
style = "bg:#054e98"
format = '[ $symbol $output ]($style)'
when = 'test "$(git_status)" = "committed"'

[custom.git_status_committed]
style = "bg:#054e98"
format = '[$all_status$ahead_behind ]($style)'
when = 'test "$(git_status)" = "committed"'

[custom.git_branch_dirty]
command = "git rev-parse --abbrev-ref HEAD"
symbol = ""
style = "bg:#DA627D"
format = '[ $symbol $output ]($style)'
when = 'test "$(git_status)" = "dirty"'

[custom.git_status_dirty]
style = "bg:#DA627D"
format = '[$all_status$ahead_behind ]($style)'
when = 'test "$(git_status)" = "dirty"'

[time]
disabled = false
time_format = "%R" # Hour:Minute Format
#style = "bg:#33658A"
format = '$time'